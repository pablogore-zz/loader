buildscript {
    dependencies {
        classpath 'com.h2database:h2:1.4.191'
        classpath 'mysql:mysql-connector-java:8.0.13'
    }
}
plugins{
    id 'java'
    id "org.flywaydb.flyway" version "5.2.1"

}

apply plugin: 'checkstyle'


defaultTasks 'clean', 'compileJava', 'test', 'checkstyleMain' , 'pmd', 'fatjar'

group 'com.wallethub'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    pmdConf
}

checkstyle {
    toolVersion "7.6.1"
    ignoreFailures = true
}

test {
    ignoreFailures = true
}

flyway {
    url = 'jdbc:mysql://localhost:3306'
    user = 'loader'
    password = 'loader'
    schemas = ['loaderdb']
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
        attributes 'Main-Class': ' com.ef.Parser'
    }
}

dependencies {
    compile  group: 'com.github.jankroken',name:'commandline',version:'1.7.0'
    compile  group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    compile  group: 'log4j', name: 'log4j', version: '1.2.16'

    pmdConf group: 'pmd', name: 'pmd', version: '4.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


task pmd (dependsOn: compileJava) {
    doLast {
        println 'Running PMD/CPD static code analysis'
        ant {
            if (!buildDir.isDirectory()) {
                buildDir.mkdirs()
            }
            reportFolder = new File(rootDir, "build/reports/pmd-cpd")
            if (!reportFolder.isDirectory()) {
                reportFolder.mkdirs()
            }
            taskdef(name: 'pmd', classname: 'net.sourceforge.pmd.ant.PMDTask', classpath: configurations.pmdConf.asPath)
            taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask', classpath: configurations.pmdConf.asPath)

            pmd(shortFilenames: 'true',
                    failonruleviolation: 'false',
                    rulesetfiles: 'rulesets/basic.xml, rulesets/braces.xml, rulesets/clone.xml, rulesets/coupling.xml, rulesets/codesize.xml, rulesets/design.xml, rulesets/migrating.xml, rulesets/naming.xml, rulesets/strictexception.xml, rulesets/strings.xml, rulesets/unusedcode.xml') {
                formatter(type: 'xml', toFile: 'build/reports/pmd-cpd/pmd.xml')
                fileset(dir: "src/main/java") {
                    include(name: '**/*.java')
                }
            }
            cpd(minimumTokenCount: 30, format: 'xml',
                    ignoreLiterals: 'true',
                    ignoreIdentifiers: 'true',
                    outputFile: 'build/reports/pmd-cpd/cpd.xml') {
                fileSet(dir: "src/main/java") {
                    include(name: '**/*.java')
                }
            }
        }
    }
}